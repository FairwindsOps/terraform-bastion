# Example usage for this terraform-bastion module.
# This example does not use all possible module inputs,
# please see [README.md](./README.md) for descriptions of all inputs.

module "bastion" {
  # Replace v0.2.0 below, with a version number from https://github.com/reactiveops/terraform-bastion/releases
  source = "git@github.com:reactiveops/terraform-bastion.git?ref=v0.2.0"

  bastion_name = "kube-bastion"

  # This can also be set in the shell environment, using TF_VAR_infrastructure_bucket
  infrastructure_bucket = "CompanyName-kube-infrastructure"

  # THis allows this module to use the same S3 bucket for multiple invocations.
  infrastructure_bucket_bastion_key = "default/bastion"
  route53_zone_id                   = "Zxxxxxxxxxxxxx"

  # This gets the VPC and subnet IDs from a separate VPC module,
  # but you can also specify `vpc-xxx` and `subnet-xxx` IDs directly.
  vpc_id = "${module.vpc.aws_vpc_id}"

  vpc_subnet_ids = ["${module.vpc.aws_subnet_public_ids}"]

  # This uses an SSH public key from the Terraform root module directory.
  ssh_public_key_file                = "${file("${path.root}/bastion_ssh.pub")}"
  unattended_upgrade_email_recipient = "you@example.com"

  # Execute additional commands during User Data, for this bastion.
  additional_user_data = <<EOD
apt-get update && apt-get install -y zsh
EOD

  # Create an additional SSH user for Continuous Integration.
  # The SSH authorized_keys will not allow commands to be run.
  additional_users = [
    {
      login           = "ci"
      gecos           = "CI access to private Kubernetes API"
      authorized_keys = "command=\"echo This account is only for CI port forwarding, there is no shell access. Press ENTER when you are ready to disconnect. . .;read junk\" ssh-rsa xxxxx..."
    },
  ]
}
